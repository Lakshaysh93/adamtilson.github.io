[General]
# Visualize routes: red towards host0 and blue towards host6
*.visualizer.typename = "IntegratedMultiCanvasVisualizer"
*.visualizer.numRoutingTableVisualizers = 2
*.visualizer.routingTableVisualizer[*].displayRoutingTables = true
*.visualizer.routingTableVisualizer[*].nodeFilter = "router* or host0 or host6"
*.visualizer.routingTableVisualizer[*].labelFormat = "%d/%m (%e) -> %g (%n)"
*.visualizer.routingTableVisualizer[0].destinationFilter = "host0"
*.visualizer.routingTableVisualizer[0].lineColor = "red"
*.visualizer.routingTableVisualizer[1].destinationFilter = "host6"
*.visualizer.routingTableVisualizer[1].lineColor = "blue"

*.visualizer.interfaceTableVisualizer[0].nodeFilter = "not switch*"
#*.visualizer.interfaceTableVisualizer[0].placementHint = "top"
#*.visualizer.interfaceTableVisualizer[0].displayWiredInterfacesAtConnections = false
#*.visualizer.interfaceTableVisualizer[0].format = "%N %a/%l"

[Config Step1]
description = "Static routing"
network = RipNetworkA

# do not add direct routes
*.configurator.addDirectRoutes = false

# Application parameters
*.host0.numApps = 1
*.host0.app[0].typename = "PingApp"
*.host0.app[0].destAddr = "host6"

*.*.ipv4.arp.typename = "GlobalArp"

# Visualizer settings
*.visualizer.interfaceTableVisualizer[0].displayInterfaceTables = true

# ---------------------------------------------------------------

[Config Step2]
description = "Pinging after RIP convergence"
network = RipNetworkA

# adding default routes in all hosts
*.configurator.config = xml("<config> \
                                <interface hosts='**' address='10.x.x.x' netmask='255.x.x.x'/> \
                                <autoroute sourceHosts='host*'/> \
                             </config>")

*.configurator.addStaticRoutes = true

# RIP parameters on routers
*.router*.hasRip = true
*.router*.rip.startupTime = uniform(0s,1s)
# disable advanced features for now!
*.router*.rip.ripConfig = xml("<config> \
                                  <interface hosts='router*' mode='NoSplitHorizon' /> \
                               </config>")
*.router*.rip.triggeredUpdate = false

# Application parameters
*.host0.numApps = 1
*.host0.app[0].typename = "PingApp"
*.host0.app[0].destAddr = "host6"
*.host0.app[0].startTime = 50s

# turning on global ARP to focus on the RIP messages
*.*.ipv4.arp.typename = "GlobalArp"  # TODO: for some reasons GlobalArp does not work -> it seems to work now

# Visualizer settings
*.visualizer.interfaceTableVisualizer[0].displayInterfaceTables = true

# ---------------------------------------------------------------

[Config Step3]
description = "Link breakage"
extends = Step2

# Enable split horizon in order for the scenario to work properly
*.router*.rip.ripConfig = xml("<config> \
                                  <interface hosts='router*' mode='SplitHorizon' /> \
                               </config>")
# Disable ping application
*.host0.numApps = 0

*.scenarioManager.script = xml("<scenario> \
                                    <disconnect t='50' src-module='router2' dest-module='switch2' /> \
                                </scenario>")

# ---------------------------------------------------------------

[Config Step4A]
description = "RIP timers: Link comes back online before the timeout timer expires"
extends = Step2

# Enable split horizon in order for the scenario to work properly
*.router*.rip.ripConfig = xml("<config> \
                                  <interface hosts='router*' mode='SplitHorizon' /> \
                               </config>")
# disable ping application
*.host0.numApps = 0

# Break the router2 <--> switch1 link at t=50 s. and reconnect at t=150 s.
*.scenarioManager.script = xmldoc("scenario5.xml")

# ---------------------------------------------------------------

[Config Step4B]
description = "RIP timers: Link comes back online before the garbage-collection timer expires"
extends = Step2
# (garbage-collection timer is also called hold-down timer)

# Break the router2 <--> switch1 link at t=50 s. and reconnect at t=300 s.
*.scenarioManager.script = xmldoc("scenario6.xml")

# ---------------------------------------------------------------

[Config Step4C]
description = "RIP timers: Link comes back online after the garbage-collection timer expires"
extends = Step2

# Break the router2 <--> switch1 link at t=50 s. and reconnect at t=602 s.
*.scenarioManager.script = xmldoc("scenario7.xml")

# ---------------------------------------------------------------
